//------------------------------------------------------------------------------
// <auto-generated>
//     這個程式碼是由範本產生。
//
//     對這個檔案進行手動變更可能導致您的應用程式產生未預期的行為。
//     如果重新產生程式碼，將會覆寫對這個檔案的手動變更。
// </auto-generated>
//------------------------------------------------------------------------------

namespace CCS.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CCSEntities : DbContext
    {
        public CCSEntities()
            : base("name=CCSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CS_ACTIONLOG> CS_ACTIONLOG { get; set; }
        public virtual DbSet<CS_SYSEXCEPTION> CS_SYSEXCEPTION { get; set; }
        public virtual DbSet<CS_SYSLOG> CS_SYSLOG { get; set; }
        public virtual DbSet<CS_SYSMODULE> CS_SYSMODULE { get; set; }
        public virtual DbSet<CS_SYSMODULEOPERATE> CS_SYSMODULEOPERATE { get; set; }
        public virtual DbSet<CS_SYSRIGHT> CS_SYSRIGHT { get; set; }
        public virtual DbSet<CS_SYSRIGHTOPERATE> CS_SYSRIGHTOPERATE { get; set; }
        public virtual DbSet<CS_SYSROLE> CS_SYSROLE { get; set; }
        public virtual DbSet<CS_SYSUSER> CS_SYSUSER { get; set; }
        public virtual DbSet<customer> customer { get; set; }
        public virtual DbSet<employee> employee { get; set; }
        public virtual DbSet<VENDOR> VENDOR { get; set; }
        public virtual DbSet<WAHO> WAHO { get; set; }
        public virtual DbSet<EMPNO> EMPNO { get; set; }
        public virtual DbSet<CS_COMT> CS_COMT { get; set; }
        public virtual DbSet<CS_SEQ_NO> CS_SEQ_NO { get; set; }
        public virtual DbSet<CS_CODL> CS_CODL { get; set; }
        public virtual DbSet<ITEM> ITEM { get; set; }
        public virtual DbSet<CS_WIRES> CS_WIRES { get; set; }
        public virtual DbSet<CS_WIP> CS_WIP { get; set; }
        public virtual DbSet<CS_MOMT> CS_MOMT { get; set; }
        public virtual DbSet<CS_MACHINE> CS_MACHINE { get; set; }
        public virtual DbSet<CS_PROCESS> CS_PROCESS { get; set; }
        public virtual DbSet<CS_PROCESS_SET> CS_PROCESS_SET { get; set; }
        public virtual DbSet<CS_WIP_F> CS_WIP_F { get; set; }
        public virtual DbSet<CS_WIRE_RECIPIENT> CS_WIRE_RECIPIENT { get; set; }
    
        public virtual int SP_SYS_ClearUnusedRIGHTOPERATE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SYS_ClearUnusedRIGHTOPERATE");
        }
    
        public virtual ObjectResult<SP_SYS_GetRightOperate_Result> SP_SYS_GetRightOperate(string userId, string url)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("url", url) :
                new ObjectParameter("url", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SYS_GetRightOperate_Result>("SP_SYS_GetRightOperate", userIdParameter, urlParameter);
        }
    
        public virtual int SP_SYS_InsertSysRIGHT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SYS_InsertSysRIGHT");
        }
    
        public virtual int SP_Sys_UpdateSysRightRightFlag(string moduleId, string roleId)
        {
            var moduleIdParameter = moduleId != null ?
                new ObjectParameter("moduleId", moduleId) :
                new ObjectParameter("moduleId", typeof(string));
    
            var roleIdParameter = roleId != null ?
                new ObjectParameter("roleId", roleId) :
                new ObjectParameter("roleId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Sys_UpdateSysRightRightFlag", moduleIdParameter, roleIdParameter);
        }
    
        public virtual ObjectResult<SP_Sys_GetRightByRoleAndModule_Result> SP_Sys_GetRightByRoleAndModule(string roleId, string moduleId)
        {
            var roleIdParameter = roleId != null ?
                new ObjectParameter("roleId", roleId) :
                new ObjectParameter("roleId", typeof(string));
    
            var moduleIdParameter = moduleId != null ?
                new ObjectParameter("moduleId", moduleId) :
                new ObjectParameter("moduleId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Sys_GetRightByRoleAndModule_Result>("SP_Sys_GetRightByRoleAndModule", roleIdParameter, moduleIdParameter);
        }
    
        public virtual ObjectResult<SP_Sys_GetUserByRoleId_Result> SP_Sys_GetUserByRoleId(string roleId)
        {
            var roleIdParameter = roleId != null ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Sys_GetUserByRoleId_Result>("SP_Sys_GetUserByRoleId", roleIdParameter);
        }
    
        public virtual int SP_Sys_UpdateSysRoleSysUser(string roleId, string userId)
        {
            var roleIdParameter = roleId != null ?
                new ObjectParameter("roleId", roleId) :
                new ObjectParameter("roleId", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Sys_UpdateSysRoleSysUser", roleIdParameter, userIdParameter);
        }
    
        public virtual int SP_Sys_DeleteSysRoleSysUserByUserId(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Sys_DeleteSysRoleSysUserByUserId", userIdParameter);
        }
    
        public virtual ObjectResult<SP_GEN_ORDNO_Result> SP_GEN_ORDNO(string tYPE, string pREFIX, Nullable<int> cOUNT)
        {
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            var pREFIXParameter = pREFIX != null ?
                new ObjectParameter("PREFIX", pREFIX) :
                new ObjectParameter("PREFIX", typeof(string));
    
            var cOUNTParameter = cOUNT.HasValue ?
                new ObjectParameter("COUNT", cOUNT) :
                new ObjectParameter("COUNT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GEN_ORDNO_Result>("SP_GEN_ORDNO", tYPEParameter, pREFIXParameter, cOUNTParameter);
        }
    
        public virtual ObjectResult<SP_PROCESS_SET_Result> SP_PROCESS_SET()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PROCESS_SET_Result>("SP_PROCESS_SET");
        }
    }
}
